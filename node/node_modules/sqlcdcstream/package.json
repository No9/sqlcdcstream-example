{
  "name": "sqlcdcstream",
  "description": "MS SQL Server Change Data Capture For Node",
  "tags": [
    "SQLServer",
    "MSSQL",
    "CDC",
    "sync",
    "Change Data Capture"
  ],
  "version": "0.0.3",
  "author": {
    "name": "Anton Whalley",
    "email": "anton.whalley@vodafone.ie"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/No9/sqlcdcstream.git"
  },
  "bugs": {
    "url": "https://github.com/No9/sqlcdcstream/issues"
  },
  "dependencies": {
    "msnodesql": "0.2.1"
  },
  "devDependencies": {},
  "scripts": {},
  "readme": "# sqlcdcstream\r\n\r\nIs a node.js module that enables changes made to data an Microsoft SQL Server Database Table to be converted to a stream.\r\n\r\nIt captures all CRUD operations on a table and utilises the built in [Change Data Capture](http://msdn.microsoft.com/en-us/library/bb522489.aspx) functionality of SQL Server.\r\n\r\n## Install \r\n```\r\nnpm install sqlcdcstream\r\n```\r\n\r\nIf your database server does not currently have sqlcdcstream schema do either of the following\r\n```\r\n> node node-modules\\sqlcdcstream\\install-database.js\r\n```\r\n\r\nOr run the script sql\\installsqlcdc.sql on the database server\r\n```\r\n> osql -E -n-1 -i .\\sql\\installsqlcdc.sql -o install-database.log\r\n```\r\n\r\nThis creates a database on the local instance to store the id of the latest record.\r\nYou will find the output of these commands in install-database.log\r\nThe script will not delete the database if it already exists.\r\n\r\n## Configuration\r\n\r\nEnable SQL Server Change Data Capture on the Database\r\n```\r\n> osql -E \r\n1> USE NAME_OF_YOUR_DATABASE\r\n2> GO\r\n1> EXEC sys.sp_cdc_enable_db\r\n2> GO\r\n```\r\n\r\nEnable Change Data Capture on a Table\r\n```\r\n> osql -E \r\n1> USE NAME_OF_YOUR_DATABASE\r\n2> GO\r\n1> EXECUTE sys.sp_cdc_enable_table \r\n\t@source_schema = N'SCHEMA NAME E.G. dbo', \r\n\t@source_name = N'TABLE_NAME', \r\n\t@capture_instance = N'SCHEMA_NAME_TABLE_NAME'\";\r\n2> GO\r\n```\r\n\r\n## Usage\r\n\r\nWrite a program to emit changes\r\n```\r\nvar mystream = require('sqlcdc')\r\nvar connection =  \"Driver={SQL Server Native Client 11.0};Server=(local);Database=DB_NAME;Trusted_Connection={Yes}\"\r\nvar schema = \"dbo\"\r\nvar tablename = \"NAME_OF_TABLE\"\r\nvar interval = 1000 //frequency the table is polled\r\nvar stm = mystream.changes(connection, schema, tablename, interval);\r\nstm.pipe(process.stdout);\r\n```",
  "_id": "sqlcdcstream@0.0.3",
  "dist": {
    "shasum": "7ac65b6aa32eea4937630c247770f659874b28eb"
  },
  "_from": "sqlcdcstream@0.0.3"
}
